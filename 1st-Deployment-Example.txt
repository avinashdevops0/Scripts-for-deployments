#!/bin/bash

#====================== Project Configuration ==========================

PROJECT_NAME="MyFrontendApp"       # ‚úÖ Name of your project
PORT=3000                          # ‚úÖ Port on which you want to run your application (e.g., 3000)

#----------- GitHub details required for Deployment -------------------

GITHUB_USERNAME="Avinash001"       # ‚úÖ Your GitHub username
GITHUB_ACCESSTOKEN="ghp_xxxxx"     # ‚úÖ GitHub Personal Access Token with repo access (replace with real token)
GITHUB_REPOSITORY="Avinash001/demoapplication"   # ‚úÖ Format: username/repo_name
CLONED_REPO_NAME="demoapplication" # ‚úÖ This is the name of the folder that will be created after cloning
GITHUB_Remote_BRANCH_NAME="main"   # ‚úÖ Branch you want to deploy from (e.g., "main" or "dev")

#------------------------ Deployment Directory -------------------------

Deployment_DIR_Name="myapp"        # ‚úÖ Folder under /var/www/html where build files will be served

#=======================================================================

echo "============================================="
echo "üöÄ Starting deployment process for $PROJECT_NAME"
echo "============================================="


# Step 1: Kill any process using the specified port (clean start)
echo "üîç Checking if any process is running on port $PORT..."
PID=$(lsof -t -i:$PORT)

if [ -n "$PID" ]; then
  echo "‚ö†Ô∏è  Process found on port $PORT (PID: $PID). Terminating it..."
  kill -9 $PID
  echo "‚úÖ Process (PID: $PID) has been terminated."
else
  echo "‚úÖ No process is currently running on port $PORT."
fi

# Step 2: Create or reset the deployment directory
if [ -d "/var/www/html/$Deployment_DIR_Name" ]; then
  echo "üóëÔ∏è Directory '/var/www/html/$Deployment_DIR_Name' already exists. Removing..."
  rm -rf "/var/www/html/$Deployment_DIR_Name"
else
  echo "üìÅ Creating directory '/var/www/html/$Deployment_DIR_Name'..."
fi

mkdir -p "/var/www/html/$Deployment_DIR_Name"

# Step 3: Clone the GitHub repo using token (for private or public repos)
echo "üì• Cloning repository..."
git clone "https://${GITHUB_USERNAME}:${GITHUB_ACCESSTOKEN}@github.com/${GITHUB_REPOSITORY}.git"

# Step 4: Change into the cloned directory and checkout correct branch
cd "$CLONED_REPO_NAME" || { echo "‚ùå Failed to access cloned directory"; exit 1; }

echo "üîÑ Switching to branch '$GITHUB_Remote_BRANCH_NAME'..."
git checkout "$GITHUB_Remote_BRANCH_NAME"

# Step 5: Check for a build folder and move contents to deployment directory
# üìù Assumes you have already run `npm run build` locally or in CI
if [ -d "build" ]; then
  echo "üì¶ Moving build files to deployment directory..."
  mv build/* "/var/www/html/$Deployment_DIR_Name"
  echo "‚úÖ Files moved successfully"
else
  echo "‚ùå Build directory not found. Make sure the project is built before deploying."
  exit 1
fi

# Step 6: Serve the static files using `serve`
# This starts a lightweight Node.js server to serve your app
echo "üöÄ Starting frontend server on port $PORT..."
cd /var/www/html
serve -s "$Deployment_DIR_Name" -l "$PORT" &>> "$Deployment_DIR_Name.log" &

# Step 7: Wait and verify the app is running
echo "‚è≥ Waiting for the frontend to start..."
sleep 5
NEW_PID=$(lsof -t -i:$PORT)

if [ -n "$NEW_PID" ]; then
  echo "‚úÖ Frontend is live on port $PORT (PID: $NEW_PID)."
else
  echo "‚ùå Frontend failed to start. Please check '/var/www/html/$Deployment_DIR_Name.log' for details."
fi

# Final log
echo "============================================="
echo "‚úÖ $PROJECT_NAME deployment completed"
echo "============================================="
#=======================================================Variables ===================================================================================================================
| Variable                    | Example Value                  | Explanation                                                  |
| --------------------------- | ------------------------------ | ------------------------------------------------------------ |
| `PROJECT_NAME`              | `"MyFrontendApp"`              | Name of your app, shown in logs                              |
| `PORT`                      | `3000`                         | The port where the app will be served                        |
| `GITHUB_USERNAME`           | `"Avinash001"`                 | Your GitHub username                                         |
| `GITHUB_ACCESSTOKEN`        | `"ghp_abcd1234..."`            | GitHub token (keep secret, has access to clone private repo) |
| `GITHUB_REPOSITORY`         | `"Avinash001/demoapplication"` | Format: `<username>/<repo>`                                  |
| `CLONED_REPO_NAME`          | `"demoapplication"`            | Folder name after git clone                                  |
| `GITHUB_Remote_BRANCH_NAME` | `"main"`                       | Branch to deploy from                                        |
| `Deployment_DIR_Name`       | `"myapp"`                      | Target folder under `/var/www/html`                          |
